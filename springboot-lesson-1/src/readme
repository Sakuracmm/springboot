Spring Framework手动装配
Spring模式注解装配
    定义：一种用于声明在应用中扮演“组件”角色的注解
    例如：@Component、@Service、@Configuration
    装配：<context:component-scan>或@ComponentScan
    模式注解(Stereotype Annotations)
        模式注解是一种由Spring在应用中扮演“组件”角色的注解，如SpringFrame中@Respository
        标注在任何类上，用于扮演仓储角色的模式注解。

        @Component作为一种由Spring容器托管的通用模式组件，任何被@Component标注的组件均为组件扫描
        的筛选对象。类似的凡是@Component元标注（meta-annotated）的注解，如@Service,当任何组件标
        注它时，也被视作组件扫描的候选对象。
    模式注解举例：
        SpringFramework注解               场景说明                    起始版本
        @Repository                       数据仓储模式注解              2.0
        @Component                        通用组件模式注解              2.5
        @Service                          服务模式注解                  2.5
        @Controller                       Web控制器模式注解             2.5
        @Configuration                    配置类模式注解                3.0

装配方式(.xml方式)
    <context:component-scan>方式

           <!--激活注解驱动特性-->
           <context:annotation-config>

           <!--找寻被@Component或者其派生Annotation标记的类（class）,将他们注册为Spring Bean-->
           <context:component-scan:base-package="com.ll.springboot">

装配方式(@ComponentScan方式 since 3.1)

@ComponentScan(basePackage="com.ll.springboot")
public class SpringConfiguration{
    ......
}

@Component的两个性质
    @Component “派生性”
        @Target({ElementType.TYPE})
        @Retention(RetentionPolicy.RUNTIME)
        @Documented
        @Repository
        public @interface FirstlevelRepository{

            String value() default "";

        }
    @Component “层次性”
        @Target(ElementType.TYPE)
        @Retention(RetentionPolicy.RUNTIME)
        @Documented
        @FirstlevelRepository{
            String value() default "";
        }
Spring @Enable模块装配
    定义：具备相同领域的功能组件的结合，组合所形成一个独立的单元
    举例：@EnableWebMvc、@EnableAutoConfiguration等
    实现方式：注解方式、编程方式
    Spring Framework 3.1开始支持“@Enable 模块驱动”，所谓“模块”是指具备相同领域的功能组件集合，
    组合所形成一个独立的单元，比如WebMVC模块，AspectJ代理模块，Caching(缓存)模块，JMX(java管理扩展)模块，
    Async(异步代理)模块等。
    @Enable注解模块举例

    框架实现                @Enable注解模块         激活模块
    Spring Framework        @EnableWebMVC           Web MVC
                            @EnableTranactionManagement    事务管理模块
                            @EnableCaching          Caching模块
                            @EnableMBeanExport      JMX模块
                            @EnableAsync            异步处理模块
                            @EnableWebFlux          Web Flux模块
                            @EnableAspectJAutoProxy     Aspectj代理模块

    Spring boot             @EnableAutoConfiguration    自动装配模块
                            @EnableManagementContext    Actuator模块
                            @EnableConfigurationProperties  配置属性绑定模块
                            @EnableOAuth2Sso        OAuth2单点登录模块

    SpringCloud             @EnableEurekaServer     Eureka服务器模块
                            @EnableConfigServer     配置服务模块
                            @EnableFeignClients     Feign客户端模块
                            @EnableZuulProxy        服务网关Zuul模块
                            @EnableCircuitBreaker   服务熔断模块
Spring Framework手动装配
Spring条件装配
    定义：Bean装配前置判断
    举例：@Profile、@Conditional
    实现：注解方式、编程方式
    从Spring Frameworke3.1开始，允许Bean装配时增加前置条件判断
    Spring注解            场景说明                起始版本
    @Profile              配置化条件装配          3.1
    @Conditional          编程条件装配            4.0

SpringBoot自动装配
    SpringBoot自定装配
        定义：基于约定大于配置的原则，实现Spring组件自动装配的目的
        装配：模式注解、@Enable模块、条件装配、工厂加载机制
        实现：激活自动装配、实现自动装配、配置自动装配实现




